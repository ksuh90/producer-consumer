version: '2.1'

services:

    rabbitmq:
        image: rabbitmq:3-management
        ports:
            - "15672:15672"
            - "5672:5672"
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "rabbitmqctl", "node_health_check"]
            interval: 3s
            timeout: 20s
            retries: 5

    cloudant:
        container_name: cloudant
        image: ibmcom/cloudant-developer:latest
        hostname: developer.local
        ports:
            - "5984:80"
        volumes:
            - cloudant:/srv
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "curl", "localhost:80"]
            interval: 3s
            timeout: 20s
            retries: 5

    producer:
        restart: always
        build:
            context: ./producer
        networks:
            - app-network
        environment:
            - MESSAGE_QUEUE=amqp://rabbitmq
            - QUEUE_NAME=transaction_queue
            - CLOUDANT_URL=http://cloudant
            - INTERVAL_MIN=5
            - INTERVAL_MAX=10
        depends_on:
            rabbitmq:
                condition: service_healthy
            cloudant:
                condition: service_healthy
    
    consumer:
        restart: always
        build:
            context: ./consumer
        networks:
            - app-network
        ports:
            - "8080:8080"
        environment:
            - MESSAGE_QUEUE=amqp://rabbitmq
            - QUEUE_NAME=transaction_queue
            - CLOUDANT_URL=http://cloudant
        depends_on:
            rabbitmq:
                condition: service_healthy
            cloudant:
                condition: service_healthy

networks:
    app-network:
        driver: bridge

volumes:
    cloudant:
