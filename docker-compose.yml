version: '2.1'

services:

    rabbitmq:
        image: rabbitmq:3-management
        ports:
            - "15672:15672"
            - "5672:5672"
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "rabbitmqctl", "status"]
            interval: 3s
            timeout: 20s
            retries: 5

    redis:
        image: redis
        ports:
            - "6379:6379"
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 3s
            timeout: 20s
            retries: 5

    producer:
        build:
            context: ./producer
        volumes:
            - producer-sync:/opt/app:nocopy
        networks:
            - app-network
        environment:
            - MESSAGE_QUEUE=amqp://rabbitmq
            - QUEUE_NAME=transaction_queue
            - REDIS_URL=redis://redis
        depends_on:
            rabbitmq:
                condition: service_healthy
            redis:
                condition: service_healthy
        # deploy:
        #     replicas: 2
    
    consumer:
        build:
            context: ./consumer
        volumes:
            - consumer-sync:/opt/app:nocopy
        networks:
            - app-network
        ports:
            - "8080:8080"
        environment:
            - MESSAGE_QUEUE=amqp://rabbitmq
            - QUEUE_NAME=transaction_queue
            - REDIS_URL=redis://redis
        depends_on:
            rabbitmq:
                condition: service_healthy
            redis:
                condition: service_healthy

networks:
    app-network:
        driver: bridge

volumes:
    producer-sync:
        external: true
    consumer-sync:
        external: true
